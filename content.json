{"meta":{"title":"我的第一篇博客","subtitle":"","description":"这是一个示例博客","author":"Guan","url":"http://example.com","root":"/"},"pages":[{"title":"friends","date":"2025-01-18T03:59:56.000Z","updated":"2025-01-18T03:59:56.685Z","comments":true,"path":"friends/index.html","permalink":"http://example.com/friends/index.html","excerpt":"","text":""},{"title":"categories","date":"2025-01-18T04:00:45.000Z","updated":"2025-01-18T04:00:45.602Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2025-01-18T04:00:20.000Z","updated":"2025-01-18T04:00:20.121Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"about","date":"2025-01-18T03:59:32.000Z","updated":"2025-01-18T03:59:32.881Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"Linux命令行基础","slug":"Linux命令行基础","date":"2025-01-18T04:26:03.623Z","updated":"2025-01-18T04:28:14.979Z","comments":true,"path":"2025/01/18/Linux命令行基础/","permalink":"http://example.com/2025/01/18/Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9F%BA%E7%A1%80/","excerpt":"","text":"第二天任务：Linux命令行基础第二章-01-Linux目录结构_哔哩哔哩_bilibili(想用视频学习的可以看这个视频的第二章，不过我还是推荐看文档或博客) Linux目录结构Windows目录结构： Windows目录结构如上图所示 而在Linux的目录结构中，没有盘符的概念，有的只是一个根目录 / ，在根目录下存放的就是一些具体的文件。在Linux中，会把一些硬件设备抽象成文件的形式存放在硬盘上，于是在Linux系统中有这样的一句话：一切皆文件。 相比于Windows上图形化页面为主，用鼠标点击的操作形式 Linux上更多不依赖鼠标，而是只使用键盘，所有的操作都能用快捷键和命令行实现。 与你交互的只有那个黑框框（命令行终端），所以命令是基础 Linux命令提示符基础格式无论是什么命令，用于什么用途，在Linux中，命令有其通用的格式command [-options] [parameter] command:命令本身-options:[可选，非必填]命令的一些选项，可以通过选项控制命令的行为细节parameter:[可选，非必填]命令的参数，多数用于命令的指向目标等 常用命令 （光看是没用的，动手试一下）lsls (list)： ls 的作用就是列出当前目录&#x2F;指定目录下的文件或者目录。类似于Windows中的双击某个目录，查看里面具有有哪些东西。 其中蓝色的是目录（文件夹），白色的是普通文件。 在ls后面加上一个指定的路径，就可以查看指定路径下的内容。 / 是根目录，对标Windows中的“此电脑”。 Linux中的任何一个文件都是在 / 根目录下存在的。 使用ls -l可以查看其中的具体信息： 此操作类似于Windows中的“显示详细信息”。 除了ls-l ，还有ls -a等很多用法（不需要全都记住，了解-a，-l，-k这种比较常用的就行） 上述的这些选项，也叫做命令行参数。 注意：命令行的参数与参数之间，需要一个空格进行分割。 cdcd (change directory)：切换目录 在Linux系统中，磁盘上的文件和目录被组成一个目录树，每个节点都是目录或者文件。 cd相当于在Windows中资源管理器中双击了某个目录。 cd后面跟上你想切换目录的路径，路径可以是相对路径，也可以是绝对路径。 示例： 直接切换目录到根目录下： 使用绝对路径切换目录： 使用相对路径切换目录： cd后面不加任何选项，就会直接跳转到当前用户的home目录。 cd 和 ls 是我们最常使用的命令之一。 pwdpwd：显示当前的完整路径（防止用户迷路） 此命令类似于Windows中鼠标在“此电脑”地址栏中点击一下的效果。 示例： touchtouch：创建一个空白文件。 示例： 执行touch abc.txt后，Linux不会给任何反馈。 在Linux中，没有消息就是最好的消息，这意味着命令执行成功了。 catcat：读取文件内容。 注意： 如果读取小文件还好，但对于特别大的文件，cat的使用会很不方便。 cat命令的作用： 读取硬盘上的文件； 把文件的内容显示在终端上。 示例： 1cat /etc/passwd 可以为cat命令添加参数-n，为读取的内容添加行号： 1cat -n /etc/passwd echoecho：向文件写入内容。 示例： 1echo &quot;hello&quot; &gt; abc.txt 上述命令会将hello写入到abc.txt文件中，之后使用cat查看文件内容： 1cat abc.txt 注意：每次执行echo命令时，会覆盖文件的原有内容。 示例： 12echo &quot;world&quot; &gt; abc.txtcat abc.txt 输出：文件内容被覆盖，只剩下“world”。 注意： echo和cat仅适用于简单文件的操作。如果文件比较大或复杂，建议使用其他工具。 mkdirmkdir：创建目录。 此命令类似于Windows中的右键“新建文件夹”。 示例： 1mkdir ddd 添加命令行参数-p，可递归创建多级目录： 1mkdir -p aaa/bbb/ccc 此命令会在当前目录下创建aaa目录，在aaa目录下创建bbb，再在bbb下创建ccc目录。 rmrm：删除文件&#x2F;目录。 示例： 1rm abc.txt 执行rm命令时，系统会提示确认是否删除文件。 递归删除目录：添加命令行参数-r： 1rm -r aaa 删除文件夹及其内部文件 强制删除：添加命令行参数-rf，可强制删除而不进行询问： 1rm -rf ddd 注意： Linux中没有回收站的概念，删除即为永久删除。 警告：根目录/是Linux的最顶级节点。如果误用rm -rf /命令，系统将彻底损坏。慎用。 cpcp：复制文件或目录。 复制文件： 1cp a.txt a1.txt 上述命令将a.txt文件复制为a1.txt。 复制目录：复制目录时，必须添加参数-r： 1cp -r aa bb 上述命令将整个aa目录复制到bb目录下。 mvmv：移动或重命名文件&#x2F;目录。 如果源文件和目标文件在同一目录下，此命令等同于重命名操作。 重命名： 1mv a.txt b.txt 上述命令将a.txt重命名为b.txt 1mv b.txt ./ab 移动文件 移动并重命名： 1mv a.txt aa/a3.txt 上述命令将a.txt文件移动到aa目录下并重命名为a3.txt。 lnln：软链接，也称为符号链接，类似于 windows 里的快捷方式，有自己的数据块，主要存放了链接其他文件的路径。 1ln -s [原文件或目录] [软链接名] （功能描述：给原文件创建一个软链接） (1）创建软连接 1ln -s /home/lnTest.txt ./lnTxt （2）删除软链接： rm -rf 软链接名，而不是 rm -rf 软链接名&#x2F;如果使用 rm -rf 软链接名&#x2F; 删除，会把软链接对应的真实目录下内容删掉 1rm -rf lnTxt chmodchmod（change mode）是 Linux 和类 Unix 系统中的一个命令，用于修改文件或目录的权限。通过使用 chmod，你可以控制文件或目录的访问权限，决定哪些用户或用户组可以读、写或执行该文件。 1chmod [选项] 模式 文件名 选项：常用的选项包括 -R（递归修改目录及其内容的权限）。 模式：指定文件的权限，可以使用符号模式（如 rwx）或者数字模式（如 755）来指定。 文件名：要修改权限的文件或目录名。 1. 符号模式在符号模式中，你可以使用以下符号来指定权限： r：表示读权限（read）。 w：表示写权限（write）。 x：表示执行权限（execute）。 +：添加权限。 -：去除权限。 =：设置精确权限（覆盖之前的权限）。 符号模式由三部分组成： 用户类别： u：文件的拥有者（user）。 g：文件的所属组（group）。 o：其他用户（others）。 a：所有用户（all，等同于 u、g、o）。 权限类型： r：读权限。 w：写权限。 x：执行权限。 操作符： +：添加权限。 -：去除权限。 =：设置具体权限。 示例： 授予文件所有者读、写、执行权限，去除其他用户的执行权限： 1chmod u+rwx,o-x file.txt 为所有用户添加执行权限： 1chmod a+x script.sh 设置文件拥有者为读写权限，组和其他用户为只读权限： 1chmod u=rw,g=r,o=r file.txt 2. 数字模式数字模式通过一个三位的数字来表示权限。每一位数字代表用户类别的权限（文件拥有者、文件所属组和其他用户）。每个数字是一个权限值的总和： 读权限（r）&#x3D; 4 写权限（w）&#x3D; 2 执行权限（x）&#x3D; 1 通过将这些数字加起来来表示不同的权限组合： 7 &#x3D; 4 + 2 + 1 &#x3D; 读、写、执行权限（rwx） 6 &#x3D; 4 + 2 &#x3D; 读、写权限（rw-） 5 &#x3D; 4 + 1 &#x3D; 读、执行权限（r-x） 4 &#x3D; 4 &#x3D; 读权限（r–） 3 &#x3D; 2 + 1 &#x3D; 写、执行权限（wx-） 2 &#x3D; 2 &#x3D; 写权限（w–） 1 &#x3D; 1 &#x3D; 执行权限（x–） 0 &#x3D; 0 &#x3D; 没有任何权限（—） 数字模式中，三位数字分别表示文件拥有者、文件所属组和其他用户的权限。 示例： 为文件设置权限：文件拥有者：读、写、执行；文件所属组：读、执行；其他用户：执行： 1chmod 751 file.txt 为文件设置权限：文件拥有者：读、写；文件所属组和其他用户：读权限： 1chmod 644 file.txt 3. 递归修改目录权限使用 -R 选项，可以递归地修改目录及其内容的权限。 示例： 递归为目录及其所有文件和子目录设置权限：文件拥有者：读、写、执行；组和其他用户：只读：1chmod -R 755 /path/to/directory 4. 查看文件权限使用 ls -l 命令可以查看文件或目录的权限。 示例：1ls -l file.txt 输出示例： 1-rwxr-xr-- 1 user group 1234 Jan 7 12:34 file.txt 解释： 第一个字符 - 表示文件类型（- 为普通文件，d 为目录）。 接下来的 9 个字符表示文件的权限： rwx：文件拥有者（user）有读、写、执行权限。 r-x：文件所属组（group）有读、执行权限。 r--：其他用户（others）只有读权限。 5. 常见例子 授予文件所有者读、写权限，去除其他用户的写权限： 1chmod u+rw,o-w file.txt 将文件的权限设置为：文件所有者：读、写、执行；其他用户没有任何权限： 1chmod 700 file.txt 使所有用户都能执行某个脚本文件： 1chmod a+x script.sh 递归更改目录的权限，设置所有者可读、写、执行，其他用户和组只读： 1chmod -R 744 /path/to/directory find 是一个在 Linux 和类 Unix 系统中非常有用的命令，用于在指定目录下搜索符合条件的文件或目录。它可以根据文件名、类型、权限、大小、修改时间等多种条件进行搜索。 find1find [路径] [条件] [操作] 路径：指定搜索的起始目录，可以是一个或多个目录。可以使用 . 表示当前目录，或者 / 表示根目录。 条件：指定用于匹配文件的标准（如名称、类型、大小、权限等）。 操作：对匹配的文件执行的操作，例如删除、输出文件名等。 常见选项和用法： 搜索文件名 使用 -name 选项来根据文件名进行搜索。可以使用通配符（如 *）来匹配多个文件。 示例： 搜索当前目录下所有名为 example.txt 的文件： 1find . -name &quot;example.txt&quot; 搜索当前目录下所有以 .txt 结尾的文件： 1find . -name &quot;*.txt&quot; 搜索所有以大写字母 A 开头的文件： 1find . -name &quot;A*&quot; 根据文件类型搜索 使用 -type 选项来指定要搜索的文件类型。 f：普通文件。 d：目录。 l：符号链接。 示例： 搜索当前目录下所有的目录： 1find . -type d 搜索当前目录下所有的普通文件： 1find . -type f 搜索当前目录下所有的符号链接： 1find . -type l 根据文件大小搜索 使用 -size 选项可以根据文件的大小进行搜索。大小单位可以是： c：字节（bytes）。 k：千字节（KB）。 M：兆字节（MB）。 G：千兆字节（GB）。 示例： 搜索当前目录下大于 100 KB 的文件： 1find . -size +100k 搜索当前目录下小于 10 MB 的文件： 1find . -size -10M tar1. 压缩文件 创建 .tar.gz 压缩归档文件： 1tar -czf archive.tar.gz /path/to/directory_or_files 解释： -c：创建归档文件。 -z：使用 gzip 压缩归档文件。 -f：指定归档文件名 archive.tar.gz。 /path/to/directory_or_files：指定要打包并压缩的文件或目录。 2.解压 .tar.gz 文件使用 -z 选项解压 .tar.gz 文件。 解压 .tar.gz 文件：1tar -xzf archive.tar.gz 解释： -x：提取文件。 -z：使用 gzip 解压归档文件。 -f：指定要解压的归档文件名。 篇幅有限，更多Linux命令参考下列博客学习（选看）Linux入门教程（非常详细）从零基础入门到精通，看完这一篇就够了_linux教程-CSDN博客 有一些还是很重要的，比如6.2中的前七个，6.3的前两个 作业：Linux 基础命令操作任务 1：文件和目录操作 创建一个新目录：创建一个名为 my_project 的目录。 在 my_project 目录下创建 3 个文件：创建以下三个文件： file1.txt file2.txt file3.txt 在每个文件中写入内容：使用 echo 或 cat 命令向 file1.txt、file2.txt 和 file3.txt 中分别写入以下内容： file1.txt：写入 “This is file 1.” file2.txt：写入 “This is file 2.” file3.txt：写入 “This is file 3.” 查看文件内容：使用 cat命令查看上述文件的内容。 任务 2：文件和目录管理 创建一个新目录：在 my_project 目录下，创建一个名为 backup 的子目录。 将文件移动到 backup 目录：使用 mv 命令，将 file1.txt、file2.txt 和 file3.txt 移动到 backup 子目录。 查看文件是否成功移动：使用 ls 命令查看 backup 目录下的文件。 任务 3：压缩与解压操作 压缩 backup 目录：使用 tar 命令将 backup 目录压缩成 .tar.gz 格式的归档文件，命名为 backup.tar.gz。 解压 backup.tar.gz 归档文件：在 my_project 目录中解压 backup.tar.gz 文件，确保解压后的文件在 backup 目录下。 任务 4：文件查找 查找文件：使用 find 命令查找 my_project 目录及其子目录中所有以 .txt 结尾的文件。","categories":[],"tags":[]},{"title":"博客搭建第二天","slug":"搭建博客第二天","date":"2025-01-18T03:26:09.790Z","updated":"2025-01-18T04:15:43.122Z","comments":true,"path":"2025/01/18/搭建博客第二天/","permalink":"http://example.com/2025/01/18/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%BA%8C%E5%A4%A9/","excerpt":"","text":"基于HEXO搭建个人博客第二天下载安装hexo运行命令： 1npm install -g hexo-cli 可输入命令 hexo -v 查看是否安装成功。 初始化hexo，新建存储博客的文件夹： 1hexo init myblog 进入我们创建的myblog文件夹： 12cd myblog npm install 启动服务站点： 运行 ： hexo g hexo s 浏览器访问 http://localhost:4000/ 出现下图说明启动成功 将博客部署到github上： 登录github，新建一个Repository，Repository name必须是你github的用户名.github.io 前往仓库主页获取如下链接： 进入myblog文件夹，用vscode打开_config.yml文件，拉到最后填写deploy模块，repository复制刚才得到的链接： 安装插件： 1npm install hexo-deployer-git --save 现在可以将博客部署到github上去了 ​ hexo c &amp;&amp; hexo g &amp;&amp; hexo d ​ 执行成功后可在浏览器通过： 你的用户名.github.io来访问你的博客。","categories":[],"tags":[]},{"title":"博客搭建第一天","slug":"博客搭建第一天","date":"2025-01-18T03:26:09.788Z","updated":"2025-01-18T04:14:00.966Z","comments":true,"path":"2025/01/18/博客搭建第一天/","permalink":"http://example.com/2025/01/18/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%AC%E4%B8%80%E5%A4%A9/","excerpt":"","text":"基于HEXO搭建个人博客第一天准备工作 安装Node.jshttps://nodejs.cn/download/点击此链接直接下载。 建议使用12.0及以上版本 方案一：（两个方案均以windows为例）如果你选择安装.msi，那么直接下载64位，打开msi文件并安装然后到第四步安装过程不框选对钩。 然后win+R，输入cmd并打开，输入npm –version ,node –version，如果正确出现版本号，说明安装已成功。 接下来我们配置环境变量，找到刚刚安装的目录，在这个目录里创建node_global和node_cache两个文件夹。然后我们复制node_global和node_cache 路径，然后以管理员身份打开cmd输入以下命令：tips：通过开始菜单搜索栏输入cmd，右键，选择以管理员身份打开即可 123456npm config set prefix &quot;你的node_global文件路径&quot;npm config set cache &quot;你的node_cache文件夹路径&quot; 我们可以通过运行：npm config get prifix npm config get cache 这两条命令来判断路径配置是否成功。 然后我们按下win键，在搜索框搜索环境变量，点击编辑系统环境变量，进入后点击右下角的环境变量，在系统变量里点击新建，按下图步骤操作即可： 然后继续编辑用户变量中的path 找到用户变量中的path，选中后点击编辑，然后若有APPData\\Roaming 则将其改成node_global的路径，然后点击确定即可。 最后修改系统变量的path值 找到系统变量的PATH，选中后点编辑，进入页面后点击新建，然后输入%NODE_PATH% 最后的最后一路点击确定退出即可。 做完这些工作后，我们来学习如何给npm换源 以管理员什么打开cmd，然后输入以下命令即可：npm install -g cnpm –registry&#x3D;https://registry.npm.taobao.org 耐心等待即可。 如果安装这个报错，可以运行该命令： npm config set registry https://registry.npmmirror.com 然后运行该命令检查是否安装成功： npm config get registry 然后我们安装express模块： 管理员身份打开cmd, 运行： npm install express -g 安装完成即可。 在node_global中找到express文件夹则代表安装成功。 方案二： 如果你的电脑不能直接打开.msi文件，那么你可以选择自行上网查找如何打开.msi文件，或者到刚刚给出的官方网站中下载其压缩包形式，选择windows二进制文件（.zip）选择64位下载即可，现在完成后与方案一的配置操作唯一不同的是需要你在你的压缩目录中使用cmd（即不能直接在桌面中使用cmd）那么要以管理员身份打开cmd需要你现在桌面以管理员身份打开cmd，接着使用命令： cd 你的压缩路径，来进入你压缩目录的cmd 安装git git的安装不多做赘述 作业 使用方案二的同学请思考如何直接在桌面的cmd使用npm?请自主完成。 使用方案一的同学请思考为什么方案二只能在压缩的目录中使用cmd，请作出回答并给出方案：如何直接在桌面的cmd中使用npm。 请自主完成。","categories":[],"tags":[]}],"categories":[],"tags":[]}